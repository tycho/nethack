#	NetHack Makefile (VMS) - data files: special levels and other data.
#	SCCS Id: @(#)Makefile.dat	3.1	93/01/06

#  Copy this file to [.dat]Makefile.; no editing needed.

MAKE	= mms
CD	= set default
ECHO	= write sys$output
NOOP	= !			# don't do anything
RUN	= mcr			# simplest way to pass command line args
TOUCH	= append/New _NLA0:	# only one file per $(TOUCH)
# support directories, relative to each other and to 'src'
DAT = [-.dat]
UTL = [-.util]
# utilities; must match Makefile.utl in spelling and punctuation
MAKEDEFS = $(UTL)makedefs.exe;
LEVCOMP  = $(UTL)lev_comp.exe;
DGNCOMP  = $(UTL)dgn_comp.exe;

# note: filespecs have enough punctuation to satisfy DELETE
MARKERS = spec_levs.timestamp;,quest_levs.timestamp;
VARDAT	= data.;,rumors.;,quest.dat;,oracles.;,options.;
DUNGEON = dungeon.;
# note: the level lists need to be space separated
QUESTLEVS = Arch.des Barb.des Caveman.des Elf.des Healer.des Knight.des \
	Priest.des Rogue.des Samurai.des Tourist.des Valkyrie.des Wizard.des
SPECLEVS  = bigroom.des castle.des endgame.des gehennom.des knox.des \
	medusa.des mines.des oracle.des tower.des yendor.des

all :	$(VARDAT) $(DUNGEON) $(MARKERS)
      @ $(ECHO) "data files are up to date."

# these are convenience targets for "manual" interactive use
spec_levs :	spev_levs.timestamp
      @ $(ECHO) "special levels are up to date."
quest_levs :	quest_levs.timestamp
      @ $(ECHO) "quest levels are up to date."
dungeon :	$(DUNGEON)
      @ $(ECHO) "dungeon is up to date."
data :		data.;
      @ $(NOOP)
rumors :	rumors.;
      @ $(NOOP)
quest.dat :	quest.dat;
      @ $(NOOP)
oracles :	oracles.;
      @ $(NOOP)
options :	options.;
      @ $(NOOP)

$(MAKEDEFS) :
	$(CD) $(UTL)
	$(MAKE)$(MAKEFLAGS) $(MAKEDEFS)
      @ $(CD) $(DAT)

$(DGNCOMP) :
	$(CD) $(UTL)
	$(MAKE)$(MAKEFLAGS) $(DGNCOMP)
      @ $(CD) $(DAT)

$(LEVCOMP) :
	$(CD) $(UTL)
	$(MAKE)$(MAKEFLAGS) $(LEVCOMP)
      @ $(CD) $(DAT)

data.; :	data.base $(MAKEDEFS)
	$(RUN) $(MAKEDEFS) -d

rumors.; :	rumors.tru rumors.fal $(MAKEDEFS)
	$(RUN) $(MAKEDEFS) -r

quest.dat; :	quest.txt $(MAKEDEFS)
	$(RUN) $(MAKEDEFS) -q

oracles.; :	oracles.txt $(MAKEDEFS)
	$(RUN) $(MAKEDEFS) -h

# note: 'options' should have already been made when include/date.h was created
options.; :	$(MAKEDEFS)
	$(RUN) $(MAKEDEFS) -v

spec_levs.timestamp; :	$(SPECLEVS) $(LEVCOMP)
	$(RUN) $(LEVCOMP) $(SPECLEVS)
	$(TOUCH) spec_levs.timestamp;

quest_levs.timestamp; : $(QUESTLEVS) $(LEVCOMP)
	$(RUN) $(LEVCOMP) $(QUESTLEVS)
	$(TOUCH) quest_levs.timestamp;

$(DUNGEON) :	dungeon.def $(MAKEDEFS) $(DGNCOMP)
	$(RUN) $(MAKEDEFS) -e		!dungeon.def -> dungeon.pdf
	$(RUN) $(DGNCOMP) dungeon.pdf	!dungeon.pdr -> dungeon

clean :
      - if f$search("*.*;-1").nes."" then  purge
      - if f$search("dungeon.pdf").nes."" then	delete dungeon.pdf;
      - if f$search("*.timestamp").nes."" then	delete $(MARKERS)
      - delete $(VARDAT)

spotless :	clean
      - if f$search("$(DUNGEON)").nes."" then  delete $(DUNGEON)
      - if f$search("*.lev").nes."" then  delete *.lev;
