#
# This file contains the randomly used "vaults", or predefined rooms.

#
# NOTE:
#  - Usually the correct choice for the vault room type is "rndvault",
#    but occasionally other types might be acceptable. "ordinary" vault
#    room might be converted to any other type of random room, as per
#    random level generation.
#  - To only generate the items/monsters/whatever you define in the vault,
#    set the room prefilled flag to false. Otherwise you'll get normal
#    room contents in addition to the stuff you defined.
#

#
# BUGS:
#  - ROOMDOOR cannot be used, as corridors haven't been created yet.
#    (create_door() in sp_lev.c, "if (IS_ROCK(levl[x][y-1].typ)) goto redoloop;" etc
#    is a check whether there's actual free space behind the door, outside the room)
#  - SUBROOM does not work. (causes a crash occasionally. try with fake delphi)
#  - cannot do split rooms.  (can do, with MAP-ENDMAP & REGIONs)
#  - Player is occasionally put into a corner of the map. Why?
#
# TODO:
#  - save how many vaults are available somewhere, so nethack can look it up.
#  - VAULT: "unique_name_string", frequency_int
#  - FLAGS: unique
#  - JOIN: (x,y), doorstate
#  - mark walls where we don't want random doors to be put.
#  - unjoined rooms (aka $$$$ vaults)
#  - force random corridors to join in certain place?
#  - variable sized rooms?
#  - should be able to mark rooms irregular.
#  - maybe vault-specific level sounds?
#
#
#


# normal random room
# vault 0000 is special; it's picked 7 out of 8 times when making a room.
LEVEL:"vlt-0000"
FLAGS:noflip
ROOM:"ordinary", random, random, random, random {
}


# lava/ice/pool/tree/fountain room
LEVEL:"vlt-0001"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (3,3) {
  $terr = TERRAIN: { 'L', 'I', 'P', 'T', '{' }
  SHUFFLE: $terr
   IF [10%] { TERRAIN:(0,0), $terr[0] }
   IF [10%] { TERRAIN:(1,0), $terr[0] }
   IF [10%] { TERRAIN:(2,0), $terr[0] }
   IF [10%] { TERRAIN:(0,1), $terr[0] }
   TERRAIN:(1,1),$terr[0]
   IF [10%] { TERRAIN:(2,1), $terr[0] }
   IF [10%] { TERRAIN:(0,2), $terr[0] }
   IF [10%] { TERRAIN:(1,2), $terr[0] }
   IF [10%] { TERRAIN:(2,2), $terr[0] }
}



# big room, 1
LEVEL:"vlt-0002"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (30,10) {
}


# big room, 2 (max. vertical height)
LEVEL:"vlt-0003"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (10,17) {
}


# thin, long, horizontal room
LEVEL:"vlt-0004"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (17,3) {
}


# thin, long, vertical room
LEVEL:"vlt-0005"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (3,17) {
}


# tiny cage, big monster
LEVEL:"vlt-0006"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (5,5) {
  TERRAIN:(1,1) & (2,1) & (3,1) &
          (1,2) &         (3,2) &
          (1,3) & (2,3) & (3,3), 'F'
  IF [50%] {
    $mons = MONSTER: { 'M', 'D', 'O', 'Z', 'T', 'H' }
    SHUFFLE: $mons
    MONSTER: $mons[0],(2,2),hostile
  }
}


# room with dangerous monster and loot
LEVEL:"vlt-0007"
FLAGS:noflip
ROOM:"rndvault", random, random, random, random {
  $mons = MONSTER: { 'M', 'D', 'O', 'Z', 'T', 'H' }
  SHUFFLE: $mons
  MONSTER:$mons[0],random
  MONSTER[50%]:$mons[0],random
  MONSTER[25%]:$mons[0],random
  OBJECT:random,random
  OBJECT[50%]:random,random
  OBJECT[25%]:random,random
  OBJECT[10%]:random,random
}


# boulder room
LEVEL:"vlt-0008"
FLAGS:noflip
ROOM:"rndvault", random, random, random, random {
  LOOP [1d6 + 3] {
    OBJECT:"boulder", random
  }
  LOOP [1d4] {
    TRAP:"rolling boulder", random
  }
}


# tiny room
LEVEL:"vlt-0009"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (1,1) {
}


# horizontal corridor
LEVEL:"vlt-0010"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (10,1) {
}


# vertical corridor
LEVEL:"vlt-0011"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (1,10) {
}


# ice room
LEVEL:"vlt-0012"
FLAGS:noflip
ROOM:"rndvault", random, random, random, random {
  TERRAIN:floodfill(1,1), 'I'
}


# random cloud/lava/ice/pool/tree room
LEVEL:"vlt-0013"
FLAGS:noflip
ROOM:"rndvault", random, random, random, random {
  $fill = selection: filter(30%, floodfill(1,1))
  $terr = TERRAIN: { 'C', 'L', 'I', 'P', 'T' }
  SHUFFLE: $terr
  TERRAIN:$fill, $terr[0]
}


# buried treasure
LEVEL:"vlt-0014"
FLAGS:noflip
# note: intentionally ordinary.
ROOM:"ordinary", random, random, random, random {
  CONTAINER:('(', "chest"), random,buried {
    LOOP [3d4] {
      OBJECT:random
    }
  }
}


# massacre
LEVEL:"vlt-0015"
FLAGS:noflip
ROOM:"rndvault", random, random, random, random {
  LOOP [5d5] {
    OBJECT:('%', "corpse"), random, montype:'@'
  }
}


# statuary
LEVEL:"vlt-0016"
FLAGS:noflip
ROOM:"rndvault", random, random, random, random {
  LOOP [5d5] {
    CONTAINER:('`', "statue"), random { }
  }
  TRAP[50%]:"statue", random
  TRAP[50%]:"statue", random
  TRAP[50%]:"statue", random
}


# brazier
LEVEL:"vlt-0017"
FLAGS:noflip
ROOM:"ordinary", unlit, random, random, random {
  OBJECT:('\\', "brazier"), random
}


# temple of the gods
LEVEL:"vlt-0018"
FLAGS:noflip
ROOM:"rndvault", random, random, random, random {
  ALTAR:random, align[0], altar
  ALTAR:random, align[1], altar
  ALTAR:random, align[2], altar
}


# mausoleum
LEVEL:"vlt-0019"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (5,5) {
  TERRAIN:(1,1) & (2,1) & (3,1) &
          (1,2) &         (3,2) &
          (1,3) & (2,3) & (3,3), '-'
  IF [50%] {
    $mons = MONSTER: { 'M', 'V', 'L', 'Z' }
    SHUFFLE: $mons
    MONSTER:$mons[0],(2,2), hostile
  } ELSE {
    OBJECT:('%', "corpse"), random, montype:'@'
  }

  IF [20%] {
    $place = { (2,1), (1,2), (3,2), (2,3) }
    SHUFFLE: $place
    TERRAIN: $place[0], 'S'
  }
}



# Split
# must be rndvault, otherwise causes problems due to both sides being same room.
LEVEL:"vlt-0020"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (5,5) {
  $hole = (2,2)
  $terr = TERRAIN:{'-', 'F'}
  SHUFFLE:$terr
  IF [50%] {
    SWITCH [1d3] {
      CASE 1:
        TERRAIN:line (0,1)-(4,1), $terr[0]
	$hole = (2,1)
        BREAK
      CASE 2:
        TERRAIN:line (0,2)-(4,2), $terr[0]
        BREAK
      CASE 3:
        TERRAIN:line (0,3)-(4,3), $terr[0]
	$hole = (2,3)
        BREAK
    }
  } ELSE {
    SWITCH [1d3] {
      CASE 1:
        TERRAIN:line (1,0)-(1,4), $terr[0]
	$hole = (1,2)
        BREAK
      CASE 2:
        TERRAIN:line (2,0)-(2,4), $terr[0]
        BREAK
      CASE 3:
        TERRAIN:line (3,0)-(3,4), $terr[0]
	$hole = (3,2)
        BREAK
    }
  }
  TERRAIN:$hole,'.'
}

# big room, 1, random type
LEVEL:"vlt-0021"
FLAGS:noflip
ROOM:random, random, random, random, (17,10) {
}


# big room, 2 (max. vertical height), random type
LEVEL:"vlt-0022"
FLAGS:noflip
ROOM:random, random, random, random, (10,17) {
}

# very thin, long, horizontal room
LEVEL:"vlt-0023"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (50,5) {
}

# very very thin, long, horizontal room
LEVEL:"vlt-0024"
FLAGS:noflip
ROOM:"rndvault", random, random, random, (70,3) {
}

# L-shaped
LEVEL:"vlt-0025"
GEOMETRY:random
MAP
-----xxx
|...|xxx
|...|xxx
|...----
|......|
|......|
|......|
--------
ENDMAP
REGION:(1,1,3,3),random,"rndvault",irregular { }


# Split horizontally
LEVEL:"vlt-0026"
GEOMETRY:random
MAP
--------
|......|
|......|
|LLLLLL|
|......|
|......|
|......|
--------
ENDMAP
IF [75%] {
  $terr = TERRAIN:{ '-', 'F' }
  SHUFFLE: $terr
  REPLACE_TERRAIN:(1,1,6,6),'L', $terr[0],100%
}
REGION:(1,1,6,2),random,"ordinary",unfilled { }
REGION:(1,4,6,6),random,"ordinary",unfilled { }


# Split vertically
LEVEL:"vlt-0027"
GEOMETRY:random
MAP
---------
|...L...|
|...L...|
|...L...|
|...L...|
|...L...|
|...L...|
---------
ENDMAP
IF [75%] {
  $terr = TERRAIN:{ '|', 'F' }
  SHUFFLE: $terr
  REPLACE_TERRAIN:(1,1,7,6),'L', $terr[0],100%
}
REGION:(1,1,3,6),random,"ordinary",unfilled { }
REGION:(5,1,7,6),random,"ordinary",unfilled { }


# Blocked center
LEVEL:"vlt-0028"
GEOMETRY:random
MAP
-----------
|.........|
|.........|
|.........|
|...LLL...|
|...LLL...|
|...LLL...|
|.........|
|.........|
|.........|
-----------
ENDMAP
IF [75%] {
  $terr = TERRAIN:{ '-', 'P' }
  SHUFFLE: $terr
  REPLACE_TERRAIN:(1,1,9,9),'L', $terr[0],100%
}
IF [80%] {
  REGION:(1,1,1,1),random,"rndvault",irregular { }
} ELSE {
  REGION:(1,1,1,1),random,"ordinary",irregular { }
}


# Circular
LEVEL:"vlt-0029"
GEOMETRY:random
MAP
xx-----xx
x--...--x
|-.....-|
|.......|
|.......|
|.......|
|-.....-|
x--...--x
xx-----xx
ENDMAP
IF [80%] {
  REGION:(4,4,4,4),random,"rndvault",irregular { }
} ELSE {
  REGION:(4,4,4,4),random,"ordinary",irregular { }
}


# Circular, small
LEVEL:"vlt-0030"
GEOMETRY:random
MAP
xx---xx
x--.--x
|-...-|
|.....|
|-...-|
x--.--x
xx---xx
ENDMAP
IF [80%] {
  REGION:(3,3,3,3),random,"rndvault",irregular { }
} ELSE {
  REGION:(3,3,3,3),random,"ordinary",irregular { }
}


# T-shaped
LEVEL:"vlt-0031"
GEOMETRY:random
MAP
xxx-----xxx
xxx|...|xxx
xxx|...|xxx
----...----
|.........|
|.........|
|.........|
-----------
ENDMAP
IF [80%] {
  REGION:(5,5,5,5),random,"rndvault",irregular { }
} ELSE {
  REGION:(5,5,5,5),random,"ordinary",irregular { }
}


# S-shaped
LEVEL:"vlt-0032"
GEOMETRY:random
MAP
-----xxx
|...|xxx
|...|xxx
|...----
|......|
|......|
|......|
----...|
xxx|...|
xxx|...|
xxx-----
ENDMAP
IF [80%] {
  REGION:(5,5,5,5),random,"rndvault",irregular { }
} ELSE {
  REGION:(5,5,5,5),random,"ordinary",irregular { }
}


# U-shaped
LEVEL:"vlt-0033"
GEOMETRY:random
MAP
-----xxx-----
|...|xxx|...|
|...|xxx|...|
|...-----...|
|...........|
|...........|
|...........|
-------------
ENDMAP
IF [80%] {
  REGION:(5,5,5,5),random,"rndvault",irregular { }
} ELSE {
  REGION:(5,5,5,5),random,"ordinary",irregular { }
}


# C-shaped
LEVEL:"vlt-0034"
GEOMETRY:random
MAP
--------
|......|
|......|
|...----
|...|xxx
|...|xxx
|...----
|......|
|......|
--------
ENDMAP
IF [80%] {
  REGION:(1,1,1,1),random,"rndvault",irregular { }
} ELSE {
  REGION:(1,1,1,1),random,"ordinary",irregular { }
}



# Throne
LEVEL:"vlt-0035"
FLAGS:noflip
ROOM:"rndvault", random, random, random, random {
  OBJECT:('\', "throne"), random
}


# Circular, big
LEVEL:"vlt-0036"
GEOMETRY:random
MAP
xxx-----xxx
x---...---x
x-.......-x
|-.......-|
|.........|
|.........|
|.........|
|-.......-|
x-.......-x
x---...---x
xxx-----xxx
ENDMAP
IF [80%] {
  REGION:(5,5,5,5),random,"rndvault",irregular { }
} ELSE {
  REGION:(5,5,5,5),random,"ordinary",irregular { }
}





##### The vaults below cause problems



# Fake Delphi, stripped down.
#LEVEL:"vlt-xxxx"
#ROOM: "ordinary" , lit, random, random, (11,9)
#{
#  SUBROOM: "delphi" , lit , (4,3) , (3,3) { }
#}

